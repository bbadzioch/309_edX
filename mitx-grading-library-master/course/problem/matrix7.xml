<problem display_name="Matrix Grader: Normalization and phase of vectors" showanswer="always" weight="10" attempts="">

<p>One of the perennial issues in grading vectors is dealing with normalization and phase conventions. We have a couple of custom comparers to help address these issues.</p>

<p>Our first example allows a vector to be compared against a reference vector, and graded correct if the two vectors are related by a phase. The vectors must have the same normalization, however. In the below case, the suggested answer is <code>[1, i]</code>, but this can be multiplied by any phase and still be graded as correct.</p>

<p>Suggested inputs:</p>

<ul>
  <li><code>[1, i]</code></li>
  <li><code>[i, -1]</code></li>
  <li><code>[-1, -i]</code></li>
  <li><code>[-i, 1]</code></li>
  <li><code>exp(i*1.2345)*[1, i]</code></li>
  <li><code>[1, i+0.1]</code></li>
  <li><code>exp(i*1.2345)*[1, i]*1.01</code></li>
</ul>

<script type="text/python" system_path="python_lib">
from mitxgraders import MatrixGrader
from mitxgraders.comparers import vector_phase_comparer
grader = MatrixGrader(
    answers={
        'comparer': vector_phase_comparer,
        'comparer_params': ['[1, i]']
    }
)
</script>

<p style="display:inline">\(\vec{v} = \) </p>
<customresponse cfn="grader" expect="[1, i]" inline="1">
  <textline math="true" preprocessorClassName="MJxPrep" preprocessorSrc="/static/MJxPrep.js" size="40" inline="1" />
</customresponse>


<p>While this deals with phases, sometimes we also want to allow for arbitrary normalization too. In this case, we can request that the student enter a vector in the span of our reference vector. Here, we again set that reference vector to be <code>[1, i]</code>.</p>

<p>Suggested inputs:</p>

<ul>
  <li><code>[1, i]</code></li>
  <li><code>17.8*exp(i*1.2345)*[1, i]</code></li>
  <li><code>[1, i+0.1]</code></li>
</ul>

<script type="text/python" system_path="python_lib">
from mitxgraders import MatrixGrader
from mitxgraders.comparers import vector_span_comparer
grader2 = MatrixGrader(
    answers={
        'comparer': vector_span_comparer,
        'comparer_params': ['[1, i]']
    }
)
</script>

<p>
<p style="display:inline">\(\vec{v} = \) </p>
<customresponse cfn="grader2" expect="[1, i]" inline="1">
  <textline math="true" preprocessorClassName="MJxPrep" preprocessorSrc="/static/MJxPrep.js" size="40" inline="1" />
</customresponse>
</p>

<h3>Resources</h3>
<ul>
  <li>
    <a href="https://github.com/mitodl/mitx-grading-library/tree/master/course/problem/matrix7.xml" target="_blank">View source</a>
  </li>
  <li>
    <a href="https://mitodl.github.io/mitx-grading-library/grading_math/comparer_functions/" target="_blank">Documentation for <code>comparer_functions</code></a>
  </li>
</ul>

</problem>
